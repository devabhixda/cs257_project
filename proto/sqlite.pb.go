// proto/sqlite.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.20.3
// source: proto/sqlite.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReadConsistency int32

const (
	// Default unspecified, server can choose default (e.g., EVENTUAL)
	ReadConsistency_READ_CONSISTENCY_UNSPECIFIED ReadConsistency = 0
	// Eventually consistent reads (local node, potentially stale)
	ReadConsistency_EVENTUAL ReadConsistency = 1
	// Strongly consistent reads (linearizable, via leader)
	ReadConsistency_STRONG ReadConsistency = 2
)

// Enum value maps for ReadConsistency.
var (
	ReadConsistency_name = map[int32]string{
		0: "READ_CONSISTENCY_UNSPECIFIED",
		1: "EVENTUAL",
		2: "STRONG",
	}
	ReadConsistency_value = map[string]int32{
		"READ_CONSISTENCY_UNSPECIFIED": 0,
		"EVENTUAL":                     1,
		"STRONG":                       2,
	}
)

func (x ReadConsistency) Enum() *ReadConsistency {
	p := new(ReadConsistency)
	*p = x
	return p
}

func (x ReadConsistency) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReadConsistency) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_sqlite_proto_enumTypes[0].Descriptor()
}

func (ReadConsistency) Type() protoreflect.EnumType {
	return &file_proto_sqlite_proto_enumTypes[0]
}

func (x ReadConsistency) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReadConsistency.Descriptor instead.
func (ReadConsistency) EnumDescriptor() ([]byte, []int) {
	return file_proto_sqlite_proto_rawDescGZIP(), []int{0}
}

type WriteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sql           string                 `protobuf:"bytes,1,opt,name=sql,proto3" json:"sql,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteRequest) Reset() {
	*x = WriteRequest{}
	mi := &file_proto_sqlite_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteRequest) ProtoMessage() {}

func (x *WriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sqlite_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteRequest.ProtoReflect.Descriptor instead.
func (*WriteRequest) Descriptor() ([]byte, []int) {
	return file_proto_sqlite_proto_rawDescGZIP(), []int{0}
}

func (x *WriteRequest) GetSql() string {
	if x != nil {
		return x.Sql
	}
	return ""
}

type WriteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"` // Error message if success is false
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteResponse) Reset() {
	*x = WriteResponse{}
	mi := &file_proto_sqlite_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteResponse) ProtoMessage() {}

func (x *WriteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sqlite_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteResponse.ProtoReflect.Descriptor instead.
func (*WriteResponse) Descriptor() ([]byte, []int) {
	return file_proto_sqlite_proto_rawDescGZIP(), []int{1}
}

func (x *WriteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *WriteResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ReadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sql           string                 `protobuf:"bytes,1,opt,name=sql,proto3" json:"sql,omitempty"`
	Consistency   ReadConsistency        `protobuf:"varint,2,opt,name=consistency,proto3,enum=proto.ReadConsistency" json:"consistency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadRequest) Reset() {
	*x = ReadRequest{}
	mi := &file_proto_sqlite_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRequest) ProtoMessage() {}

func (x *ReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sqlite_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadRequest.ProtoReflect.Descriptor instead.
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return file_proto_sqlite_proto_rawDescGZIP(), []int{2}
}

func (x *ReadRequest) GetSql() string {
	if x != nil {
		return x.Sql
	}
	return ""
}

func (x *ReadRequest) GetConsistency() ReadConsistency {
	if x != nil {
		return x.Consistency
	}
	return ReadConsistency_READ_CONSISTENCY_UNSPECIFIED
}

// Represents a row of results
type Row struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        [][]byte               `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"` // Store values as bytes to handle various types
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Row) Reset() {
	*x = Row{}
	mi := &file_proto_sqlite_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Row) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Row) ProtoMessage() {}

func (x *Row) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sqlite_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Row.ProtoReflect.Descriptor instead.
func (*Row) Descriptor() ([]byte, []int) {
	return file_proto_sqlite_proto_rawDescGZIP(), []int{3}
}

func (x *Row) GetValues() [][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

// Represents the entire result set
type QueryResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Columns       []string               `protobuf:"bytes,1,rep,name=columns,proto3" json:"columns,omitempty"`
	Rows          []*Row                 `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryResult) Reset() {
	*x = QueryResult{}
	mi := &file_proto_sqlite_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResult) ProtoMessage() {}

func (x *QueryResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sqlite_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResult.ProtoReflect.Descriptor instead.
func (*QueryResult) Descriptor() ([]byte, []int) {
	return file_proto_sqlite_proto_rawDescGZIP(), []int{4}
}

func (x *QueryResult) GetColumns() []string {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *QueryResult) GetRows() []*Row {
	if x != nil {
		return x.Rows
	}
	return nil
}

type ReadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *QueryResult           `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"` // Error message if query failed
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadResponse) Reset() {
	*x = ReadResponse{}
	mi := &file_proto_sqlite_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResponse) ProtoMessage() {}

func (x *ReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sqlite_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResponse.ProtoReflect.Descriptor instead.
func (*ReadResponse) Descriptor() ([]byte, []int) {
	return file_proto_sqlite_proto_rawDescGZIP(), []int{5}
}

func (x *ReadResponse) GetResult() *QueryResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ReadResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type JoinRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`       // ID of the node wanting to join
	RaftAddr      string                 `protobuf:"bytes,2,opt,name=raft_addr,json=raftAddr,proto3" json:"raft_addr,omitempty"` // Raft address of the joining node
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinRequest) Reset() {
	*x = JoinRequest{}
	mi := &file_proto_sqlite_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRequest) ProtoMessage() {}

func (x *JoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sqlite_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRequest.ProtoReflect.Descriptor instead.
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return file_proto_sqlite_proto_rawDescGZIP(), []int{6}
}

func (x *JoinRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *JoinRequest) GetRaftAddr() string {
	if x != nil {
		return x.RaftAddr
	}
	return ""
}

type JoinResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinResponse) Reset() {
	*x = JoinResponse{}
	mi := &file_proto_sqlite_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinResponse) ProtoMessage() {}

func (x *JoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sqlite_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinResponse.ProtoReflect.Descriptor instead.
func (*JoinResponse) Descriptor() ([]byte, []int) {
	return file_proto_sqlite_proto_rawDescGZIP(), []int{7}
}

func (x *JoinResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *JoinResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_proto_sqlite_proto protoreflect.FileDescriptor

const file_proto_sqlite_proto_rawDesc = "" +
	"\n" +
	"\x12proto/sqlite.proto\x12\x05proto\" \n" +
	"\fWriteRequest\x12\x10\n" +
	"\x03sql\x18\x01 \x01(\tR\x03sql\"?\n" +
	"\rWriteResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"Y\n" +
	"\vReadRequest\x12\x10\n" +
	"\x03sql\x18\x01 \x01(\tR\x03sql\x128\n" +
	"\vconsistency\x18\x02 \x01(\x0e2\x16.proto.ReadConsistencyR\vconsistency\"\x1d\n" +
	"\x03Row\x12\x16\n" +
	"\x06values\x18\x01 \x03(\fR\x06values\"G\n" +
	"\vQueryResult\x12\x18\n" +
	"\acolumns\x18\x01 \x03(\tR\acolumns\x12\x1e\n" +
	"\x04rows\x18\x02 \x03(\v2\n" +
	".proto.RowR\x04rows\"P\n" +
	"\fReadResponse\x12*\n" +
	"\x06result\x18\x01 \x01(\v2\x12.proto.QueryResultR\x06result\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"C\n" +
	"\vJoinRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x1b\n" +
	"\traft_addr\x18\x02 \x01(\tR\braftAddr\">\n" +
	"\fJoinResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error*M\n" +
	"\x0fReadConsistency\x12 \n" +
	"\x1cREAD_CONSISTENCY_UNSPECIFIED\x10\x00\x12\f\n" +
	"\bEVENTUAL\x10\x01\x12\n" +
	"\n" +
	"\x06STRONG\x10\x022\xbd\x01\n" +
	"\x11DistributedSqlite\x12;\n" +
	"\fExecuteWrite\x12\x13.proto.WriteRequest\x1a\x14.proto.WriteResponse\"\x00\x128\n" +
	"\vExecuteRead\x12\x12.proto.ReadRequest\x1a\x13.proto.ReadResponse\"\x00\x121\n" +
	"\x04Join\x12\x12.proto.JoinRequest\x1a\x13.proto.JoinResponse\"\x00B\tZ\a./protob\x06proto3"

var (
	file_proto_sqlite_proto_rawDescOnce sync.Once
	file_proto_sqlite_proto_rawDescData []byte
)

func file_proto_sqlite_proto_rawDescGZIP() []byte {
	file_proto_sqlite_proto_rawDescOnce.Do(func() {
		file_proto_sqlite_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_sqlite_proto_rawDesc), len(file_proto_sqlite_proto_rawDesc)))
	})
	return file_proto_sqlite_proto_rawDescData
}

var file_proto_sqlite_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_sqlite_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_sqlite_proto_goTypes = []any{
	(ReadConsistency)(0),  // 0: proto.ReadConsistency
	(*WriteRequest)(nil),  // 1: proto.WriteRequest
	(*WriteResponse)(nil), // 2: proto.WriteResponse
	(*ReadRequest)(nil),   // 3: proto.ReadRequest
	(*Row)(nil),           // 4: proto.Row
	(*QueryResult)(nil),   // 5: proto.QueryResult
	(*ReadResponse)(nil),  // 6: proto.ReadResponse
	(*JoinRequest)(nil),   // 7: proto.JoinRequest
	(*JoinResponse)(nil),  // 8: proto.JoinResponse
}
var file_proto_sqlite_proto_depIdxs = []int32{
	0, // 0: proto.ReadRequest.consistency:type_name -> proto.ReadConsistency
	4, // 1: proto.QueryResult.rows:type_name -> proto.Row
	5, // 2: proto.ReadResponse.result:type_name -> proto.QueryResult
	1, // 3: proto.DistributedSqlite.ExecuteWrite:input_type -> proto.WriteRequest
	3, // 4: proto.DistributedSqlite.ExecuteRead:input_type -> proto.ReadRequest
	7, // 5: proto.DistributedSqlite.Join:input_type -> proto.JoinRequest
	2, // 6: proto.DistributedSqlite.ExecuteWrite:output_type -> proto.WriteResponse
	6, // 7: proto.DistributedSqlite.ExecuteRead:output_type -> proto.ReadResponse
	8, // 8: proto.DistributedSqlite.Join:output_type -> proto.JoinResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_proto_sqlite_proto_init() }
func file_proto_sqlite_proto_init() {
	if File_proto_sqlite_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_sqlite_proto_rawDesc), len(file_proto_sqlite_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_sqlite_proto_goTypes,
		DependencyIndexes: file_proto_sqlite_proto_depIdxs,
		EnumInfos:         file_proto_sqlite_proto_enumTypes,
		MessageInfos:      file_proto_sqlite_proto_msgTypes,
	}.Build()
	File_proto_sqlite_proto = out.File
	file_proto_sqlite_proto_goTypes = nil
	file_proto_sqlite_proto_depIdxs = nil
}
